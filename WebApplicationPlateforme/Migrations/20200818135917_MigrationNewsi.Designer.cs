// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplicationPlateforme.Data;

namespace WebApplicationPlateforme.Migrations
{
    [DbContext(typeof(FinanceContext))]
    [Migration("20200818135917_MigrationNewsi")]
    partial class MigrationNewsi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.LiaisonE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idTrOne")
                        .HasColumnType("integer");

                    b.Property<int>("idTrTwo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTrOne");

                    b.ToTable("liaisonsE");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.PiecesJointeE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointeEs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.ReceptionE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAffectation")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idAffectation");

                    b.HasIndex("idTransaction");

                    b.HasIndex("idUser");

                    b.ToTable("receptionEs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TeAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdministrationId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("iduserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nomOrganisme")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nomUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationId");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTransaction");

                    b.ToTable("TeAffectations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExpeditrice")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExterne")
                        .HasColumnType("text");

                    b.Property<string>("copieA")
                        .HasColumnType("text");

                    b.Property<string>("copieExterne")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFinis")
                        .HasColumnType("text");

                    b.Property<string>("dateFinisAction")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etablissementUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAutoriteExterne")
                        .HasColumnType("integer");

                    b.Property<int>("idEtablissementUserCreator")
                        .HasColumnType("integer");

                    b.Property<int?>("idOrg")
                        .HasColumnType("integer");

                    b.Property<int?>("idProp")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idlivreur")
                        .HasColumnType("integer");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nbPjNumerique")
                        .HasColumnType("text");

                    b.Property<string>("nomLivreur")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("numAutorite")
                        .HasColumnType("text");

                    b.Property<string>("operationlivraison")
                        .HasColumnType("text");

                    b.Property<string>("orgEnregTr")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("securite")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeEmise")
                        .HasColumnType("text");

                    b.Property<string>("typeInterne")
                        .HasColumnType("text");

                    b.Property<string>("typeRecue")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrg");

                    b.HasIndex("idProp");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transactionsEmise");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.LiaisonI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idTrOne")
                        .HasColumnType("integer");

                    b.Property<int>("idTrTwo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTrOne");

                    b.ToTable("liaisonsI");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.PiecesJointesI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointesIs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.ReceptionI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAffectation")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idAffectation");

                    b.HasIndex("idTransaction");

                    b.HasIndex("idUser");

                    b.ToTable("receptionIs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TiAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("iduserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nomOrganisme")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nomUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idAdministration");

                    b.HasIndex("idTransaction");

                    b.ToTable("tiAffectations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExpeditrice")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExterne")
                        .HasColumnType("text");

                    b.Property<string>("copieA")
                        .HasColumnType("text");

                    b.Property<string>("copieExterne")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFinis")
                        .HasColumnType("text");

                    b.Property<string>("dateFinisAction")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etablissementUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAutoriteExterne")
                        .HasColumnType("integer");

                    b.Property<int>("idEtablissementUserCreator")
                        .HasColumnType("integer");

                    b.Property<int?>("idOrg")
                        .HasColumnType("integer");

                    b.Property<int?>("idProp")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idlivreur")
                        .HasColumnType("integer");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nbPjNumerique")
                        .HasColumnType("text");

                    b.Property<string>("nomLivreur")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("numAutorite")
                        .HasColumnType("text");

                    b.Property<string>("operationlivraison")
                        .HasColumnType("text");

                    b.Property<string>("orgEnregTr")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("securite")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeEmise")
                        .HasColumnType("text");

                    b.Property<string>("typeInterne")
                        .HasColumnType("text");

                    b.Property<string>("typeRecue")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrg");

                    b.HasIndex("idProp");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transactionsI");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Liaison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idTrOne")
                        .HasColumnType("integer");

                    b.Property<int>("idTrTwo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTrOne");

                    b.ToTable("liaisons");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("addresse")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("nomcomplet")
                        .HasColumnType("text");

                    b.Property<string>("shortnom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("organismes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesAffected", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idAffectedTr")
                        .HasColumnType("integer");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idAffectedTr");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointesAffecteds");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesTr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointesTrs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("addresse")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("prenom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("proprietaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Receptioncs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAffectation")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idAffectation");

                    b.HasIndex("idTransaction");

                    b.HasIndex("idUser");

                    b.ToTable("receptioncs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<int?>("idOrganisme")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("iduserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nomOrganisme")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nomUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idOrganisme");

                    b.HasIndex("idTransaction");

                    b.ToTable("trAffectations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExpeditrice")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExterne")
                        .HasColumnType("text");

                    b.Property<string>("copieA")
                        .HasColumnType("text");

                    b.Property<string>("copieExterne")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFinis")
                        .HasColumnType("text");

                    b.Property<string>("dateFinisAction")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etablissementUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAutoriteExterne")
                        .HasColumnType("integer");

                    b.Property<int>("idEtablissementUserCreator")
                        .HasColumnType("integer");

                    b.Property<int?>("idOrg")
                        .HasColumnType("integer");

                    b.Property<int?>("idProp")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idlivreur")
                        .HasColumnType("integer");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nbPjNumerique")
                        .HasColumnType("text");

                    b.Property<string>("nomLivreur")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("numAutorite")
                        .HasColumnType("text");

                    b.Property<string>("operationlivraison")
                        .HasColumnType("text");

                    b.Property<string>("orgEnregTr")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("securite")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeEmise")
                        .HasColumnType("text");

                    b.Property<string>("typeInterne")
                        .HasColumnType("text");

                    b.Property<string>("typeRecue")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrg");

                    b.HasIndex("idProp");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.LesServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idRevenus")
                        .HasColumnType("integer");

                    b.Property<string>("nomServices")
                        .HasColumnType("text");

                    b.Property<string>("paye")
                        .HasColumnType("text");

                    b.Property<string>("prixService")
                        .HasColumnType("text");

                    b.Property<string>("reste")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idRevenus");

                    b.ToTable("lesServices");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.agenceImmob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomResponsable")
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("ville")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("agenceImmobs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.contratLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idlocation")
                        .HasColumnType("integer");

                    b.Property<int?>("locationUniteId")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("locationUniteId");

                    b.ToTable("contratLocations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.depotRevenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("depotRevenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.dotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AgenceImmobId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("comptable")
                        .HasColumnType("text");

                    b.Property<string>("compteurElec")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAgence")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nbunite")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("numCompteur")
                        .HasColumnType("text");

                    b.Property<string>("officeImmobiler")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgenceImmobId");

                    b.HasIndex("idUserCreator");

                    b.ToTable("dotations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.etatDotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("etatDotations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.etatUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("etatUnites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nationnalite")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("profession")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("locataires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locationUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("datedebutcontrat")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("delaicontrat")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("iddotation")
                        .HasColumnType("integer");

                    b.Property<int>("idlocataire")
                        .HasColumnType("integer");

                    b.Property<int>("idunite")
                        .HasColumnType("integer");

                    b.Property<string>("locataireName")
                        .HasColumnType("text");

                    b.Property<string>("moisdelocation")
                        .HasColumnType("text");

                    b.Property<string>("nomdotation")
                        .HasColumnType("text");

                    b.Property<string>("nomunite")
                        .HasColumnType("text");

                    b.Property<string>("numcontrat")
                        .HasColumnType("text");

                    b.Property<string>("prixlocationmois")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("iddotation");

                    b.HasIndex("idlocataire");

                    b.HasIndex("idunite");

                    b.ToTable("locationUnites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesLocataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idlocataire")
                        .HasColumnType("integer");

                    b.Property<string>("nomLocataire")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idlocataire");

                    b.ToTable("piecesjointesLocataires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesRevenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idrevenus")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idrevenus");

                    b.ToTable("PiecesjointesRevenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.revenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("dateTemps")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("deposant")
                        .HasColumnType("text");

                    b.Property<int>("idLocataire")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("iddotation")
                        .HasColumnType("integer");

                    b.Property<int>("idlocation")
                        .HasColumnType("integer");

                    b.Property<int>("idunite")
                        .HasColumnType("integer");

                    b.Property<string>("infoDepot")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("nomDotation")
                        .HasColumnType("text");

                    b.Property<string>("nomLocataire")
                        .HasColumnType("text");

                    b.Property<string>("numRevenusUnite")
                        .HasColumnType("text");

                    b.Property<string>("prixLocation")
                        .HasColumnType("text");

                    b.Property<string>("prixServices")
                        .HasColumnType("text");

                    b.Property<string>("prixTot")
                        .HasColumnType("text");

                    b.Property<string>("prixTotale")
                        .HasColumnType("text");

                    b.Property<string>("prixTotaleLocation")
                        .HasColumnType("text");

                    b.Property<string>("restePrixService")
                        .HasColumnType("text");

                    b.Property<string>("restePrixTotale")
                        .HasColumnType("text");

                    b.Property<string>("restePrixTotaleLocation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idlocation");

                    b.ToTable("revenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.servicesRevenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("servicesRevenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.typeDotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeDotations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.typeUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeUnites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.unite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("bureau")
                        .HasColumnType("text");

                    b.Property<string>("chambre")
                        .HasColumnType("text");

                    b.Property<string>("compteurElc")
                        .HasColumnType("text");

                    b.Property<string>("compteureau")
                        .HasColumnType("text");

                    b.Property<string>("cuisine")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dotationName")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idDotation")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("numRevenus")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("salon")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("wc")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDotation");

                    b.HasIndex("idUserCreator");

                    b.ToTable("unites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.ActivityEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("activityEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Beneficiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("beneficiaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.ClasseEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("classeEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.DepensesEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<int?>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("depensesEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("beneficiaire")
                        .HasColumnType("text");

                    b.Property<string>("classe")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datetime")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("lienmedia")
                        .HasColumnType("text");

                    b.Property<string>("localisation")
                        .HasColumnType("text");

                    b.Property<string>("media")
                        .HasColumnType("text");

                    b.Property<string>("nboutils")
                        .HasColumnType("text");

                    b.Property<string>("nbtotdep")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("outils")
                        .HasColumnType("text");

                    b.Property<string>("prixtotdep")
                        .HasColumnType("text");

                    b.Property<string>("projet")
                        .HasColumnType("text");

                    b.Property<string>("recommandation")
                        .HasColumnType("text");

                    b.Property<string>("stat")
                        .HasColumnType("text");

                    b.Property<string>("tache")
                        .HasColumnType("text");

                    b.Property<string>("typeAct")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("evenements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.MediasEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("mediasEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.OutilsEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("outilsEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<int>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("idevent")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("tache")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("participations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.PiecesJointesEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idEvent");

                    b.ToTable("piecesJointesEvents");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.TacheEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tacheEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Administration", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NomDirecteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Administration");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Departement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("IdAdministration")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NomAdministration")
                        .HasColumnType("text");

                    b.Property<string>("NomDirecteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministration");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.News.Newsi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("contenu")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("journal")
                        .HasColumnType("text");

                    b.Property<string>("lien")
                        .HasColumnType("text");

                    b.Property<string>("photo")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("newsi");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Conge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adr")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dated")
                        .HasColumnType("text");

                    b.Property<string>("datedebut")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("directeurid")
                        .HasColumnType("text");

                    b.Property<string>("directeurnom")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatd")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idremplacant")
                        .HasColumnType("text");

                    b.Property<string>("nomremplacant")
                        .HasColumnType("text");

                    b.Property<string>("rhid")
                        .HasColumnType("text");

                    b.Property<string>("rhnom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("conges");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeSalariale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dirid")
                        .HasColumnType("text");

                    b.Property<string>("dirnom")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("organisme")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeSalariales");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dirid")
                        .HasColumnType("text");

                    b.Property<string>("dirnom")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("photosPath")
                        .HasColumnType("text");

                    b.Property<string>("place")
                        .HasColumnType("text");

                    b.Property<string>("regcivil")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Equipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("transfert")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("equipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("nbheure")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesDt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<int>("IdTic")
                        .HasColumnType("integer");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdTic");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("PiecesJointesDts");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesRc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("Idrec")
                        .HasColumnType("integer");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("Idrec");

                    b.ToTable("piecesJointesRcs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PrivelegesRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dirdate")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("privileges")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("rhdate")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("transafert")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("privelegesRequests");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Recrutement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dated")
                        .HasColumnType("text");

                    b.Property<string>("datedebut")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("dure")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idremplacant")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomremplacant")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("organisme")
                        .HasColumnType("text");

                    b.Property<string>("tache")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("recrutements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.SoldeConge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("annee")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("number")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("soldeConges");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.editingUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("editingUsers");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.nomEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("nomEquipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.typeEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeEquipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.Privileges", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Rapport")
                        .HasColumnType("integer");

                    b.Property<int>("addTask")
                        .HasColumnType("integer");

                    b.Property<int>("appel")
                        .HasColumnType("integer");

                    b.Property<int>("commAd")
                        .HasColumnType("integer");

                    b.Property<int>("performance")
                        .HasColumnType("integer");

                    b.Property<int>("salaire")
                        .HasColumnType("integer");

                    b.Property<int>("serviceEmployee")
                        .HasColumnType("integer");

                    b.Property<int>("settings")
                        .HasColumnType("integer");

                    b.Property<string>("userid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("userid");

                    b.ToTable("privileges");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("FullNameEnglish")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autreIndemnite")
                        .HasColumnType("text");

                    b.Property<string>("classement")
                        .HasColumnType("text");

                    b.Property<string>("dateNaissance")
                        .HasColumnType("text");

                    b.Property<string>("dateQualification")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterectrutement")
                        .HasColumnType("text");

                    b.Property<string>("degre")
                        .HasColumnType("text");

                    b.Property<string>("directeur")
                        .HasColumnType("text");

                    b.Property<string>("emploi")
                        .HasColumnType("text");

                    b.Property<string>("etatuser")
                        .HasColumnType("text");

                    b.Property<string>("faculteEcole")
                        .HasColumnType("text");

                    b.Property<string>("heureArrive")
                        .HasColumnType("text");

                    b.Property<string>("heureDepart")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int?>("idDepartement")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("indemnite")
                        .HasColumnType("text");

                    b.Property<string>("lieuNaissance")
                        .HasColumnType("text");

                    b.Property<string>("mention")
                        .HasColumnType("text");

                    b.Property<string>("nationalite")
                        .HasColumnType("text");

                    b.Property<string>("nomAdministration")
                        .HasColumnType("text");

                    b.Property<string>("nomDepartement")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("passeport")
                        .HasColumnType("text");

                    b.Property<string>("paysetude")
                        .HasColumnType("text");

                    b.Property<string>("photo")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<string>("qualification")
                        .HasColumnType("text");

                    b.Property<string>("rang")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("religion")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("sexe")
                        .HasColumnType("text");

                    b.Property<string>("soldeconge")
                        .HasColumnType("text");

                    b.Property<string>("specialite")
                        .HasColumnType("text");

                    b.Property<string>("statut")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("typeEmploi")
                        .HasColumnType("text");

                    b.Property<string>("typeQualification")
                        .HasColumnType("text");

                    b.Property<string>("typeSang")
                        .HasColumnType("text");

                    b.Property<string>("unite")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasIndex("idAdministration");

                    b.HasIndex("idDepartement");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.LiaisonE", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idTrOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.PiecesJointeE", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.ReceptionE", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TeAffectation", "TeAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TeAffectation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("AdministrationId");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrg");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("idProp");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.LiaisonI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idTrOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.PiecesJointesI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.ReceptionI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TiAffectation", "TiAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TiAffectation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("idAdministration");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrg");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("idProp");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Liaison", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idTrOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesAffected", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", "TrAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectedTr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesTr", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Receptioncs", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", "TrAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrganisme");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrg");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("idProp");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.LesServices", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.revenus", "revenus")
                        .WithMany()
                        .HasForeignKey("idRevenus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.contratLocation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locationUnite", "locationUnite")
                        .WithMany()
                        .HasForeignKey("locationUniteId");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.dotation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.agenceImmob", "AgenceImmob")
                        .WithMany()
                        .HasForeignKey("AgenceImmobId");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locataire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locationUnite", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.dotation", "dotation")
                        .WithMany()
                        .HasForeignKey("iddotation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locataire", "locataire")
                        .WithMany()
                        .HasForeignKey("idlocataire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.unite", "unite")
                        .WithMany()
                        .HasForeignKey("idunite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesLocataire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locataire", "locataire")
                        .WithMany()
                        .HasForeignKey("idlocataire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesRevenus", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.revenus", "revenus")
                        .WithMany()
                        .HasForeignKey("idrevenus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.revenus", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locationUnite", "locationUnite")
                        .WithMany()
                        .HasForeignKey("idlocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.unite", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.dotation", "dotation")
                        .WithMany()
                        .HasForeignKey("idDotation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.DepensesEv", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Evenement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.MediasEv", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Participation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.PiecesJointesEvents", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Departement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("IdAdministration")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.News.Newsi", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Conge", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeSalariale", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeTicket", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Equipement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Permission", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesDt", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeTicket", "DemandeTicket")
                        .WithMany()
                        .HasForeignKey("IdTic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesRc", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Ressource_Humaines.Recrutement", "Recrutement")
                        .WithMany()
                        .HasForeignKey("Idrec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PrivelegesRequests", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Recrutement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.SoldeConge", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.editingUser", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.Privileges", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.ApplicationUser", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("idAdministration");

                    b.HasOne("WebApplicationPlateforme.Model.Global.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("idDepartement");
                });
#pragma warning restore 612, 618
        }
    }
}
