// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplicationPlateforme.Data;

namespace WebApplicationPlateforme.Migrations
{
    [DbContext(typeof(FinanceContext))]
    [Migration("20210912111511_Migrationstest")]
    partial class Migrationstest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.LiaisonE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idTrOne")
                        .HasColumnType("integer");

                    b.Property<int>("idTrTwo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTrOne");

                    b.ToTable("liaisonsE");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.PiecesJointeE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointeEs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.ReceptionE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAffectation")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idAffectation");

                    b.HasIndex("idTransaction");

                    b.HasIndex("idUser");

                    b.ToTable("receptionEs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TeAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdministrationId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("iduserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nomOrganisme")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nomUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationId");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTransaction");

                    b.ToTable("TeAffectations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExpeditrice")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExterne")
                        .HasColumnType("text");

                    b.Property<string>("copieA")
                        .HasColumnType("text");

                    b.Property<string>("copieExterne")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFinis")
                        .HasColumnType("text");

                    b.Property<string>("dateFinisAction")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etablissementUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAutoriteExterne")
                        .HasColumnType("integer");

                    b.Property<int>("idEtablissementUserCreator")
                        .HasColumnType("integer");

                    b.Property<int?>("idOrg")
                        .HasColumnType("integer");

                    b.Property<int?>("idProp")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idlivreur")
                        .HasColumnType("integer");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nbPjNumerique")
                        .HasColumnType("text");

                    b.Property<string>("nomLivreur")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("numAutorite")
                        .HasColumnType("text");

                    b.Property<string>("operationlivraison")
                        .HasColumnType("text");

                    b.Property<string>("orgEnregTr")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("securite")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeEmise")
                        .HasColumnType("text");

                    b.Property<string>("typeInterne")
                        .HasColumnType("text");

                    b.Property<string>("typeRecue")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrg");

                    b.HasIndex("idProp");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transactionsEmise");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.LiaisonI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idTrOne")
                        .HasColumnType("integer");

                    b.Property<int>("idTrTwo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTrOne");

                    b.ToTable("liaisonsI");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.PiecesJointesI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointesIs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.ReceptionI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAffectation")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idAffectation");

                    b.HasIndex("idTransaction");

                    b.HasIndex("idUser");

                    b.ToTable("receptionIs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TiAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("iduserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nomOrganisme")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nomUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idAdministration");

                    b.HasIndex("idTransaction");

                    b.ToTable("tiAffectations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExpeditrice")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExterne")
                        .HasColumnType("text");

                    b.Property<string>("copieA")
                        .HasColumnType("text");

                    b.Property<string>("copieExterne")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFinis")
                        .HasColumnType("text");

                    b.Property<string>("dateFinisAction")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etablissementUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAutoriteExterne")
                        .HasColumnType("integer");

                    b.Property<int>("idEtablissementUserCreator")
                        .HasColumnType("integer");

                    b.Property<int?>("idOrg")
                        .HasColumnType("integer");

                    b.Property<int?>("idProp")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idlivreur")
                        .HasColumnType("integer");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nbPjNumerique")
                        .HasColumnType("text");

                    b.Property<string>("nomLivreur")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("numAutorite")
                        .HasColumnType("text");

                    b.Property<string>("operationlivraison")
                        .HasColumnType("text");

                    b.Property<string>("orgEnregTr")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("securite")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeEmise")
                        .HasColumnType("text");

                    b.Property<string>("typeInterne")
                        .HasColumnType("text");

                    b.Property<string>("typeRecue")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrg");

                    b.HasIndex("idProp");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transactionsI");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Liaison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idTrOne")
                        .HasColumnType("integer");

                    b.Property<int>("idTrTwo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idTrOne");

                    b.ToTable("liaisons");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("addresse")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("nomcomplet")
                        .HasColumnType("text");

                    b.Property<string>("shortnom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("organismes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesAffected", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idAffectedTr")
                        .HasColumnType("integer");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idAffectedTr");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointesAffecteds");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesTr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idtransaction")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idtransaction");

                    b.ToTable("piecesJointesTrs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("addresse")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("prenom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("proprietaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Receptioncs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAffectation")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idAffectation");

                    b.HasIndex("idTransaction");

                    b.HasIndex("idUser");

                    b.ToTable("receptioncs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<int?>("idOrganisme")
                        .HasColumnType("integer");

                    b.Property<int>("idTransaction")
                        .HasColumnType("integer");

                    b.Property<string>("idUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("iduserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nomOrganisme")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAffected")
                        .HasColumnType("text");

                    b.Property<string>("nomUserQuiAffecte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idOrganisme");

                    b.HasIndex("idTransaction");

                    b.ToTable("trAffectations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExpeditrice")
                        .HasColumnType("text");

                    b.Property<string>("autoriteExterne")
                        .HasColumnType("text");

                    b.Property<string>("copieA")
                        .HasColumnType("text");

                    b.Property<string>("copieExterne")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFinis")
                        .HasColumnType("text");

                    b.Property<string>("dateFinisAction")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etablissementUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAutoriteExterne")
                        .HasColumnType("integer");

                    b.Property<int>("idEtablissementUserCreator")
                        .HasColumnType("integer");

                    b.Property<int?>("idOrg")
                        .HasColumnType("integer");

                    b.Property<int?>("idProp")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idlivreur")
                        .HasColumnType("integer");

                    b.Property<string>("nbPj")
                        .HasColumnType("text");

                    b.Property<string>("nbPjNumerique")
                        .HasColumnType("text");

                    b.Property<string>("nomLivreur")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("numAutorite")
                        .HasColumnType("text");

                    b.Property<string>("operationlivraison")
                        .HasColumnType("text");

                    b.Property<string>("orgEnregTr")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("securite")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeEmise")
                        .HasColumnType("text");

                    b.Property<string>("typeInterne")
                        .HasColumnType("text");

                    b.Property<string>("typeRecue")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrg");

                    b.HasIndex("idProp");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.Doneur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("emailOrg")
                        .HasColumnType("text");

                    b.Property<string>("employee")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nationalite")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomDir")
                        .HasColumnType("text");

                    b.Property<string>("nomOrg")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("prenom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("telEmp")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("doneurs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.PayemeentReception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("banqueEmis")
                        .HasColumnType("text");

                    b.Property<string>("banqueRecep")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateCheque")
                        .HasColumnType("text");

                    b.Property<string>("dateDons")
                        .HasColumnType("text");

                    b.Property<string>("dateOperation")
                        .HasColumnType("text");

                    b.Property<string>("dateTransfert")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("delegueNom")
                        .HasColumnType("text");

                    b.Property<string>("doneurNom")
                        .HasColumnType("text");

                    b.Property<int>("idDonneur")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomBanqueCheque")
                        .HasColumnType("text");

                    b.Property<string>("numCheque")
                        .HasColumnType("text");

                    b.Property<string>("numMachine")
                        .HasColumnType("text");

                    b.Property<string>("numOpBanque")
                        .HasColumnType("text");

                    b.Property<string>("numOperation")
                        .HasColumnType("text");

                    b.Property<string>("operationDab")
                        .HasColumnType("text");

                    b.Property<string>("photoBanque")
                        .HasColumnType("text");

                    b.Property<string>("photoCheque")
                        .HasColumnType("text");

                    b.Property<string>("photoDab")
                        .HasColumnType("text");

                    b.Property<string>("prixDons")
                        .HasColumnType("text");

                    b.Property<string>("prixDonsEcriture")
                        .HasColumnType("text");

                    b.Property<string>("projet")
                        .HasColumnType("text");

                    b.Property<string>("propCheque")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("typeDons")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDonneur");

                    b.HasIndex("idUserCreator");

                    b.ToTable("payemeentReceptions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.ProjetDons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("projetDons");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.RecueDons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateOperation")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("numMachine")
                        .HasColumnType("text");

                    b.Property<string>("numOperation")
                        .HasColumnType("text");

                    b.Property<string>("photoRecue")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("projet")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("recueDons");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.LesServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idRevenus")
                        .HasColumnType("integer");

                    b.Property<string>("nomServices")
                        .HasColumnType("text");

                    b.Property<string>("paye")
                        .HasColumnType("text");

                    b.Property<string>("prixService")
                        .HasColumnType("text");

                    b.Property<string>("reste")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idRevenus");

                    b.ToTable("lesServices");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.PiecesJointesDotLoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idlocation")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idlocation");

                    b.ToTable("PiecesJointesDotLoc");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.agenceImmob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomResponsable")
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("ville")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("agenceImmobs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.contratLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idlocation")
                        .HasColumnType("integer");

                    b.Property<int?>("locationUniteId")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("locationUniteId");

                    b.ToTable("contratLocations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.depotRevenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("depotRevenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.dotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AgenceImmobId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("comptable")
                        .HasColumnType("text");

                    b.Property<string>("compteurElec")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idAgence")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nbunite")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("numCompteur")
                        .HasColumnType("text");

                    b.Property<string>("officeImmobiler")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgenceImmobId");

                    b.HasIndex("idUserCreator");

                    b.ToTable("dotations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.etatDotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("etatDotations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.etatUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("etatUnites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nationnalite")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("profession")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("locataires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locataireDot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("adr")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedebutcontrat")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<int>("idDotation")
                        .HasColumnType("integer");

                    b.Property<int>("idUnite")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nat")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomDotation")
                        .HasColumnType("text");

                    b.Property<string>("nomUnite")
                        .HasColumnType("text");

                    b.Property<string>("nomcontrat")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("work")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDotation");

                    b.HasIndex("idUnite");

                    b.HasIndex("idUserCreator");

                    b.ToTable("locataireDot");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locationUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("datedebutcontrat")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("delaicontrat")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("iddotation")
                        .HasColumnType("integer");

                    b.Property<int>("idlocataire")
                        .HasColumnType("integer");

                    b.Property<int>("idunite")
                        .HasColumnType("integer");

                    b.Property<string>("locataireName")
                        .HasColumnType("text");

                    b.Property<string>("moisdelocation")
                        .HasColumnType("text");

                    b.Property<string>("nomdotation")
                        .HasColumnType("text");

                    b.Property<string>("nomunite")
                        .HasColumnType("text");

                    b.Property<string>("numcontrat")
                        .HasColumnType("text");

                    b.Property<string>("prixlocationmois")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("iddotation");

                    b.HasIndex("idlocataire");

                    b.HasIndex("idunite");

                    b.ToTable("locationUnites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesLocataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idlocataire")
                        .HasColumnType("integer");

                    b.Property<string>("nomLocataire")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idlocataire");

                    b.ToTable("piecesjointesLocataires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesRevenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idrevenus")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idrevenus");

                    b.ToTable("PiecesjointesRevenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.revenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("dateTemps")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("deposant")
                        .HasColumnType("text");

                    b.Property<int>("idLocDot")
                        .HasColumnType("integer");

                    b.Property<int>("idLocataire")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("iddotation")
                        .HasColumnType("integer");

                    b.Property<int>("idlocation")
                        .HasColumnType("integer");

                    b.Property<int>("idunite")
                        .HasColumnType("integer");

                    b.Property<string>("infoDepot")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("nomDotation")
                        .HasColumnType("text");

                    b.Property<string>("nomLocataire")
                        .HasColumnType("text");

                    b.Property<string>("numRevenusUnite")
                        .HasColumnType("text");

                    b.Property<string>("prixLocation")
                        .HasColumnType("text");

                    b.Property<string>("prixServices")
                        .HasColumnType("text");

                    b.Property<string>("prixTot")
                        .HasColumnType("text");

                    b.Property<string>("prixTotale")
                        .HasColumnType("text");

                    b.Property<string>("prixTotaleLocation")
                        .HasColumnType("text");

                    b.Property<string>("restePrixService")
                        .HasColumnType("text");

                    b.Property<string>("restePrixTotale")
                        .HasColumnType("text");

                    b.Property<string>("restePrixTotaleLocation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idLocDot");

                    b.HasIndex("idUserCreator");

                    b.ToTable("revenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.servicesRevenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("servicesRevenus");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.typeDotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeDotations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.typeUnite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeUnites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.unite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("attribue4")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("bureau")
                        .HasColumnType("text");

                    b.Property<string>("chambre")
                        .HasColumnType("text");

                    b.Property<string>("compteurElc")
                        .HasColumnType("text");

                    b.Property<string>("compteureau")
                        .HasColumnType("text");

                    b.Property<string>("cuisine")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dotationName")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idDotation")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("numRevenus")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("salon")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("wc")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDotation");

                    b.HasIndex("idUserCreator");

                    b.ToTable("unites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenement2.EvenementTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adr")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("bref")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("evenementTwos");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenement2.PiecesJointesEvTzo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idEv")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEv");

                    b.HasIndex("idUserCreator");

                    b.ToTable("piecesJointesEvTzos");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.ActivityEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("activityEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Beneficiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("beneficiaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.BeneficiaireEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<string>("categ")
                        .HasColumnType("text");

                    b.Property<int?>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("beneficiaireEvents");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.ClasseEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("classeEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.DepenseEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("depenseEvents");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.DepensesEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<int?>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("depensesEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.EntrerDansIslam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<int>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("nat")
                        .HasColumnType("text");

                    b.Property<string>("nb")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("entrerDansIslams");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("beneficiaire")
                        .HasColumnType("text");

                    b.Property<string>("classe")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datetime")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("lienmedia")
                        .HasColumnType("text");

                    b.Property<string>("localisation")
                        .HasColumnType("text");

                    b.Property<string>("media")
                        .HasColumnType("text");

                    b.Property<string>("nboutils")
                        .HasColumnType("text");

                    b.Property<string>("nbtotdep")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("outils")
                        .HasColumnType("text");

                    b.Property<string>("prixtotdep")
                        .HasColumnType("text");

                    b.Property<string>("projet")
                        .HasColumnType("text");

                    b.Property<string>("recommandation")
                        .HasColumnType("text");

                    b.Property<string>("stat")
                        .HasColumnType("text");

                    b.Property<string>("tache")
                        .HasColumnType("text");

                    b.Property<string>("typeAct")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("evenements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.MediasEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("mediasEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.OutilsEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("outilsEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.OutilsEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<string>("categ")
                        .HasColumnType("text");

                    b.Property<int?>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("outilsEvents");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<int>("attribut4")
                        .HasColumnType("integer");

                    b.Property<int>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("idevent")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("tache")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvent");

                    b.ToTable("participations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.PiecesJointesEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idEvent")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idEvent");

                    b.ToTable("piecesJointesEvents");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.TacheEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tacheEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.langueEv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("langueEvs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.BrancheOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idTF")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTF");

                    b.ToTable("brancheOnes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.BrancheTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idBOne")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBOne");

                    b.ToTable("brancheTwos");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.ChequeReception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateAjout")
                        .HasColumnType("text");

                    b.Property<string>("datecheque")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("livreur")
                        .HasColumnType("text");

                    b.Property<string>("numCheque")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("prixEcriture")
                        .HasColumnType("text");

                    b.Property<string>("propCheque")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("chequeReceptions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.CreanceFinanciere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateCheque")
                        .HasColumnType("text");

                    b.Property<string>("datePayEspece")
                        .HasColumnType("text");

                    b.Property<string>("datedirg")
                        .HasColumnType("text");

                    b.Property<string>("datedirproj")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dateetatuser")
                        .HasColumnType("text");

                    b.Property<string>("datepaysalaire")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("datesalaire")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("editUserNom")
                        .HasColumnType("text");

                    b.Property<string>("editdate")
                        .HasColumnType("text");

                    b.Property<string>("edituserId")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatPayUserDate")
                        .HasColumnType("text");

                    b.Property<string>("etatPayUserId")
                        .HasColumnType("text");

                    b.Property<string>("etatPayUsernom")
                        .HasColumnType("text");

                    b.Property<string>("etatPayement")
                        .HasColumnType("text");

                    b.Property<string>("etatdirectordate")
                        .HasColumnType("text");

                    b.Property<string>("etatdirectorid")
                        .HasColumnType("text");

                    b.Property<string>("etatdirectornom")
                        .HasColumnType("text");

                    b.Property<string>("etatdirg")
                        .HasColumnType("text");

                    b.Property<string>("etatdirproj")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("etatuserId")
                        .HasColumnType("text");

                    b.Property<string>("etatusernom")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddirg")
                        .HasColumnType("text");

                    b.Property<string>("iddirproj")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomBanque")
                        .HasColumnType("text");

                    b.Property<string>("nomBeneficiaire")
                        .HasColumnType("text");

                    b.Property<string>("nomdirg")
                        .HasColumnType("text");

                    b.Property<string>("nomdirproj")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("numCheque")
                        .HasColumnType("text");

                    b.Property<string>("numCompte")
                        .HasColumnType("text");

                    b.Property<string>("numcheque")
                        .HasColumnType("text");

                    b.Property<string>("numcompteExp")
                        .HasColumnType("text");

                    b.Property<string>("numcompteRecp")
                        .HasColumnType("text");

                    b.Property<string>("photocheque")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("projet")
                        .HasColumnType("text");

                    b.Property<string>("typePayement")
                        .HasColumnType("text");

                    b.Property<string>("typePaymenet")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("creanceFinancieres");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.DemandeAvance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("annee")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateC")
                        .HasColumnType("text");

                    b.Property<string>("dateD")
                        .HasColumnType("text");

                    b.Property<string>("dateDeduire")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("etatAvance")
                        .HasColumnType("text");

                    b.Property<string>("etatC")
                        .HasColumnType("text");

                    b.Property<string>("etatD")
                        .HasColumnType("text");

                    b.Property<string>("idC")
                        .HasColumnType("text");

                    b.Property<string>("idD")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("nbMoisDeduire")
                        .HasColumnType("text");

                    b.Property<string>("nomC")
                        .HasColumnType("text");

                    b.Property<string>("nomD")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("raisonRefusC")
                        .HasColumnType("text");

                    b.Property<string>("raisonRefusD")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeAvances");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.DepensesExploitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeB")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("depensesExploitations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("beneficiaire")
                        .HasColumnType("text");

                    b.Property<string>("brancheone")
                        .HasColumnType("text");

                    b.Property<string>("branchetwo")
                        .HasColumnType("text");

                    b.Property<string>("categorie")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dateetatdirector")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("directorid")
                        .HasColumnType("text");

                    b.Property<string>("directornom")
                        .HasColumnType("text");

                    b.Property<string>("editdate")
                        .HasColumnType("text");

                    b.Property<string>("edituserid")
                        .HasColumnType("text");

                    b.Property<string>("editusernom")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatPaydate")
                        .HasColumnType("text");

                    b.Property<string>("etatPayemeent")
                        .HasColumnType("text");

                    b.Property<string>("etatUserId")
                        .HasColumnType("text");

                    b.Property<string>("etatUserNom")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("etatdirector")
                        .HasColumnType("text");

                    b.Property<string>("etatuseridPay")
                        .HasColumnType("text");

                    b.Property<string>("etatusernomPay")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("usernamecreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("factures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.PiecesJointesCf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idCF")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idCF");

                    b.ToTable("piecesJointesCfs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.PiecesJointesReceptionC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idRC")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idRC");

                    b.HasIndex("idUserCreator");

                    b.ToTable("piecesJointesReceptionCs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.PiecesJointesf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idCF")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("idCF");

                    b.ToTable("piecesJointesfs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.ProjetProg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("projetProgs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.TypeBeneficiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeBeneficiaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.TypeDepense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeDepenses");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.TypeFacture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeFactures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ActionOnDemPayCheq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idDem")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCre")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nbetat")
                        .HasColumnType("text");

                    b.Property<string>("nomUserCre")
                        .HasColumnType("text");

                    b.Property<string>("nomUserFin")
                        .HasColumnType("text");

                    b.Property<string>("userrole")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDem");

                    b.HasIndex("idUserCreator");

                    b.ToTable("actionOnDemPayCheqs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ArticlePayCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("article")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<int>("idDem")
                        .HasColumnType("integer");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDem");

                    b.ToTable("articlePayCheques");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ChequeC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("classe")
                        .HasColumnType("text");

                    b.Property<string>("compte")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("dateEcriture")
                        .HasColumnType("text");

                    b.Property<string>("dateEntre")
                        .HasColumnType("text");

                    b.Property<string>("datePay")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("idCompte")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("numDemande")
                        .HasColumnType("text");

                    b.Property<string>("numcheque")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.Property<string>("recepteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("chequeCs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ChequeClasse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChequeClasses");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemPayCheqNotif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idDem")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nb")
                        .HasColumnType("text");

                    b.Property<int>("nbpartsfin")
                        .HasColumnType("integer");

                    b.Property<string>("nomUser")
                        .HasColumnType("text");

                    b.Property<string>("topic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDem");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demPayCheqNotifs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemandePayCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("calsse")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("dateEntre")
                        .HasColumnType("text");

                    b.Property<string>("dateadmin")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefinancier")
                        .HasColumnType("text");

                    b.Property<string>("dateparfinancier")
                        .HasColumnType("text");

                    b.Property<string>("datepart")
                        .HasColumnType("text");

                    b.Property<string>("demandeur")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("etatadmin")
                        .HasColumnType("text");

                    b.Property<string>("etatdirecteur")
                        .HasColumnType("text");

                    b.Property<string>("etatfinacier")
                        .HasColumnType("text");

                    b.Property<string>("etatgeneral")
                        .HasColumnType("text");

                    b.Property<string>("etatnum")
                        .HasColumnType("text");

                    b.Property<string>("etatparfinancier")
                        .HasColumnType("text");

                    b.Property<string>("etatpart")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idadmin")
                        .HasColumnType("text");

                    b.Property<string>("iddemandeur")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idfinancier")
                        .HasColumnType("text");

                    b.Property<string>("idparfinancier")
                        .HasColumnType("text");

                    b.Property<string>("idpart")
                        .HasColumnType("text");

                    b.Property<string>("idpayUser")
                        .HasColumnType("text");

                    b.Property<string>("nomadmin")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomfinancier")
                        .HasColumnType("text");

                    b.Property<string>("nomparfinancier")
                        .HasColumnType("text");

                    b.Property<string>("nompart")
                        .HasColumnType("text");

                    b.Property<int>("numdem")
                        .HasColumnType("integer");

                    b.Property<string>("numdemnb")
                        .HasColumnType("text");

                    b.Property<string>("payUsernom")
                        .HasColumnType("text");

                    b.Property<string>("payetat")
                        .HasColumnType("text");

                    b.Property<string>("prixaccepte")
                        .HasColumnType("text");

                    b.Property<string>("prixlettre")
                        .HasColumnType("text");

                    b.Property<string>("prixnb")
                        .HasColumnType("text");

                    b.Property<string>("sujet")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandePayCheques");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.FilesCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idCheque")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idCheque");

                    b.ToTable("filesCheques");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.FilesPayCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idDemCheque")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDemCheque");

                    b.ToTable("filesPays");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.PayCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idCheque")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idCheque");

                    b.HasIndex("idUserCreator");

                    b.ToTable("payCheques");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.EtatCompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("banque")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idCompte")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("numCompte")
                        .HasColumnType("text");

                    b.Property<string>("solde")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idCompte");

                    b.HasIndex("idUserCreator");

                    b.ToTable("etatComptes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.EtatListCompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("etatListComptes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.FilesEtatCompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idCompte")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idCompte");

                    b.ToTable("filesEtatComptes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.ServiceBanque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("banque")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("datedeb")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<int>("idCompte")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("numCompte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idCompte");

                    b.HasIndex("idUserCreator");

                    b.ToTable("serviceBanques");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.PayDirecteStockage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idstock")
                        .HasColumnType("integer");

                    b.Property<string>("nat")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomBen")
                        .HasColumnType("text");

                    b.Property<string>("nomStock")
                        .HasColumnType("text");

                    b.Property<string>("numBen")
                        .HasColumnType("text");

                    b.Property<string>("quantite")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("typeBen")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idstock");

                    b.ToTable("PayDirecteStockages");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("respId")
                        .HasColumnType("text");

                    b.Property<string>("respNom")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.Stockage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomstock")
                        .HasColumnType("text");

                    b.Property<string>("respId")
                        .HasColumnType("text");

                    b.Property<string>("respnom")
                        .HasColumnType("text");

                    b.Property<int>("stockId")
                        .HasColumnType("integer");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("stockId");

                    b.ToTable("Stockages");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.TypeStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("tot")
                        .HasColumnType("text");

                    b.Property<string>("unite")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("TypeStocks");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.TypeStockage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrdrePayStockage")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idstock")
                        .HasColumnType("integer");

                    b.Property<int>("idstockage")
                        .HasColumnType("integer");

                    b.Property<string>("nomstock")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("quantite")
                        .HasColumnType("text");

                    b.Property<string>("tot")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("unite")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrdrePayStockage");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idstock");

                    b.HasIndex("idstockage");

                    b.ToTable("TypeStockages");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Administration", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NomDirecteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Administration");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Departement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("IdAdministration")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NomAdministration")
                        .HasColumnType("text");

                    b.Property<string>("NomDirecteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministration");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Maintenance.FilesTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idTic")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTic");

                    b.ToTable("filesTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Maintenance.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("pageUrl")
                        .HasColumnType("text");

                    b.Property<string>("prob")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Media_Center.InterviewPart.Interview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Autre")
                        .HasColumnType("text");

                    b.Property<string>("BenefBut")
                        .HasColumnType("text");

                    b.Property<string>("Budget")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("but")
                        .HasColumnType("text");

                    b.Property<string>("butProg")
                        .HasColumnType("text");

                    b.Property<string>("dateEvent")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dureeProg")
                        .HasColumnType("text");

                    b.Property<string>("etabEvent")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("ideeProg")
                        .HasColumnType("text");

                    b.Property<string>("nomEvent")
                        .HasColumnType("text");

                    b.Property<string>("nomProg")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Media_Center.InterviewPart.TypeInterview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeInterviews");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Msg_Interne.FilesMsgInterne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idMsg")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idMsg");

                    b.ToTable("filesMsgInternes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Msg_Interne.MsgInterne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<int>("attribut2")
                        .HasColumnType("integer");

                    b.Property<int>("attribut3")
                        .HasColumnType("integer");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<int>("seen")
                        .HasColumnType("integer");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("userIdReceiver")
                        .HasColumnType("text");

                    b.Property<string>("userIdSender")
                        .HasColumnType("text");

                    b.Property<string>("userNameReceiver")
                        .HasColumnType("text");

                    b.Property<string>("userNameSender")
                        .HasColumnType("text");

                    b.Property<string>("vu")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("msgInternes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Msg_Interne.NotifMsgInterne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idMsg")
                        .HasColumnType("integer");

                    b.Property<int>("seen")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<string>("userIdReceiver")
                        .HasColumnType("text");

                    b.Property<string>("userIdSender")
                        .HasColumnType("text");

                    b.Property<string>("userNameReceiver")
                        .HasColumnType("text");

                    b.Property<string>("userNameSender")
                        .HasColumnType("text");

                    b.Property<string>("vu")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idMsg");

                    b.ToTable("notifMsgInternes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.News.Newsi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("contenu")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("journal")
                        .HasColumnType("text");

                    b.Property<string>("lien")
                        .HasColumnType("text");

                    b.Property<string>("photo")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("newsi");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.OrgPart.OrgParti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("addresse")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomcomplet")
                        .HasColumnType("text");

                    b.Property<string>("prenom")
                        .HasColumnType("text");

                    b.Property<string>("shortnom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("orgPartis");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.DotationOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("typeDotation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("DotationOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.EducationOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Autorite")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("classe")
                        .HasColumnType("text");

                    b.Property<string>("conseillerSocialNom")
                        .HasColumnType("text");

                    b.Property<string>("conseillerSocialNumTel")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("education")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("mention")
                        .HasColumnType("text");

                    b.Property<string>("niveau")
                        .HasColumnType("text");

                    b.Property<string>("nomOrph")
                        .HasColumnType("text");

                    b.Property<string>("periode")
                        .HasColumnType("text");

                    b.Property<string>("raisonedu")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("typeAutorite")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("EducationOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.FilesOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateEnreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("nomOrph")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("FilesOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.FinanceOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dotation")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("prixProjet")
                        .HasColumnType("text");

                    b.Property<string>("projetFinan")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("source")
                        .HasColumnType("text");

                    b.Property<string>("sourceProjet")
                        .HasColumnType("text");

                    b.Property<string>("subvention")
                        .HasColumnType("text");

                    b.Property<string>("typeDotation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("FinanceOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.LivesWith", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LivesWiths");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.Maladie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Maladies");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.Matieres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Matieres");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.MatieresOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomOrph")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("MatieresOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.MereOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("alive")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateNais")
                        .HasColumnType("text");

                    b.Property<string>("datedeces")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("lieuTravail")
                        .HasColumnType("text");

                    b.Property<string>("lieudeces")
                        .HasColumnType("text");

                    b.Property<string>("nbEnfant")
                        .HasColumnType("text");

                    b.Property<string>("niveauScolaire")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("sante")
                        .HasColumnType("text");

                    b.Property<string>("soutientEnfant")
                        .HasColumnType("text");

                    b.Property<string>("statutSociale")
                        .HasColumnType("text");

                    b.Property<string>("talent")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("travail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("MereOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.OrganismeOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrganismeOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.Orphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("cite")
                        .HasColumnType("text");

                    b.Property<string>("dateNais")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("lieuNais")
                        .HasColumnType("text");

                    b.Property<string>("liveWith")
                        .HasColumnType("text");

                    b.Property<string>("lose")
                        .HasColumnType("text");

                    b.Property<string>("mosquee")
                        .HasColumnType("text");

                    b.Property<string>("nat")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("propNumTel")
                        .HasColumnType("text");

                    b.Property<string>("quartier")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("sexe")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("ville")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("Orphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.ParenteOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ParenteOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.PereOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("alive")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateNais")
                        .HasColumnType("text");

                    b.Property<string>("datedeces")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("lieudeces")
                        .HasColumnType("text");

                    b.Property<string>("nbenfant")
                        .HasColumnType("text");

                    b.Property<string>("nbfemme")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("travail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("PereOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.PsyOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("besoinsDoc")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("docteur")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("maladiePsy")
                        .HasColumnType("text");

                    b.Property<string>("periode")
                        .HasColumnType("text");

                    b.Property<string>("periodeDod")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("PsyOrphelin");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.SanteOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("malade")
                        .HasColumnType("text");

                    b.Property<string>("maladie")
                        .HasColumnType("text");

                    b.Property<string>("natureMaladie")
                        .HasColumnType("text");

                    b.Property<string>("nomOrph")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("typeMaladie")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("SanteOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.SubventionOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("mecanisme")
                        .HasColumnType("text");

                    b.Property<string>("organisme")
                        .HasColumnType("text");

                    b.Property<string>("somme")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("SubventionOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.Talent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Talents");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.TalentOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomOrph")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("TalentOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.TuteurOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<string>("lieuTravail")
                        .HasColumnType("text");

                    b.Property<string>("mere")
                        .HasColumnType("text");

                    b.Property<string>("nbOrphelin")
                        .HasColumnType("text");

                    b.Property<string>("niveauScolaire")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("parente")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("sante")
                        .HasColumnType("text");

                    b.Property<string>("talent")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("travail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idOrph");

                    b.ToTable("TuteurOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.TypeDotationOrphelin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeDotationOrphelins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.TypeSubvention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeSubventions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Parrainage.Parriner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cinBen")
                        .HasColumnType("text");

                    b.Property<string>("cinOrph")
                        .HasColumnType("text");

                    b.Property<string>("cinTuteur")
                        .HasColumnType("text");

                    b.Property<int>("idOrph")
                        .HasColumnType("integer");

                    b.Property<int>("idTut")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nbParrainage")
                        .HasColumnType("text");

                    b.Property<string>("nomBen")
                        .HasColumnType("text");

                    b.Property<string>("nomOrph")
                        .HasColumnType("text");

                    b.Property<string>("nomTuteur")
                        .HasColumnType("text");

                    b.Property<string>("numBen")
                        .HasColumnType("text");

                    b.Property<string>("numOrph")
                        .HasColumnType("text");

                    b.Property<string>("numTuteur")
                        .HasColumnType("text");

                    b.Property<string>("solde")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTut");

                    b.HasIndex("idUserCreator");

                    b.ToTable("Parriners");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Parrainage.SoldeTuteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cinTuteur")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idTut")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomTuteur")
                        .HasColumnType("text");

                    b.Property<string>("numTuteur")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("solde")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTut");

                    b.HasIndex("idUserCreator");

                    b.ToTable("SoldeTuteurs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Parrainage.TuteurParrainage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nat")
                        .HasColumnType("text");

                    b.Property<string>("nbParrainage")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("numTut")
                        .HasColumnType("text");

                    b.Property<string>("otherDetails")
                        .HasColumnType("text");

                    b.Property<string>("pays")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("ville")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("TuteurParrainages");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Pointage.PointageEmpreinte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("absent")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("heureAssister")
                        .HasColumnType("text");

                    b.Property<string>("heurePartir")
                        .HasColumnType("text");

                    b.Property<string>("numEmp")
                        .HasColumnType("text");

                    b.Property<string>("numEmpreinte")
                        .HasColumnType("text");

                    b.Property<string>("present")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PointageEmpreintes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Pointage.PointageUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adresseIP")
                        .HasColumnType("text");

                    b.Property<string>("adresseMac")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("datePresence")
                        .HasColumnType("text");

                    b.Property<string>("dateQuitter")
                        .HasColumnType("text");

                    b.Property<string>("dateTimePresence")
                        .HasColumnType("text");

                    b.Property<string>("dateTimeQuitter")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("etatPc")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("latePresence")
                        .HasColumnType("text");

                    b.Property<string>("lateQuitter")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("timePresence")
                        .HasColumnType("text");

                    b.Property<string>("timeQuitter")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("PointageUsers");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.FilesProjetOrg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idprojet")
                        .HasColumnType("integer");

                    b.Property<string>("pathc")
                        .HasColumnType("text");

                    b.Property<string>("typec")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idprojet");

                    b.ToTable("FilesProjetOrg");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.ProjetClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("pays")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("travail")
                        .HasColumnType("text");

                    b.Property<string>("ville")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProjetClient");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.ProjetOrg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("dateDebut")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("dateReception")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("dureePar")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatDate")
                        .HasColumnType("text");

                    b.Property<string>("etatUser")
                        .HasColumnType("text");

                    b.Property<int>("idClient")
                        .HasColumnType("integer");

                    b.Property<string>("idDir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomClient")
                        .HasColumnType("text");

                    b.Property<string>("nomDir")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idClient");

                    b.HasIndex("idUserCreator");

                    b.ToTable("ProjetOrgs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.ProjetOuvrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idprojet")
                        .HasColumnType("integer");

                    b.Property<string>("nomProjet")
                        .HasColumnType("text");

                    b.Property<string>("nomUser")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idprojet");

                    b.ToTable("ProjetOuvrier");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.ButProjet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("benef")
                        .HasColumnType("text");

                    b.Property<string>("but")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<int>("idprojet")
                        .HasColumnType("integer");

                    b.Property<string>("nbbenef")
                        .HasColumnType("text");

                    b.Property<string>("nbbut")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("tot")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idprojet");

                    b.ToTable("butProjets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.ClassProjet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("classProjets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.Compte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("numCompte")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("comptes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.FilesProjet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idprojet")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idprojet");

                    b.ToTable("filesProjets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.OrganismeSupp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fax")
                        .HasColumnType("text");

                    b.Property<string>("jobResp")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomResp")
                        .HasColumnType("text");

                    b.Property<string>("numTel")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("organismeSupps");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.PayementActivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("payementActivites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.PayementProjet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("activite")
                        .HasColumnType("text");

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("but")
                        .HasColumnType("text");

                    b.Property<string>("butprojet")
                        .HasColumnType("text");

                    b.Property<string>("categ")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idprojet")
                        .HasColumnType("integer");

                    b.Property<string>("nb")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("tot")
                        .HasColumnType("text");

                    b.Property<int>("totprix")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idprojet");

                    b.ToTable("payementProjets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.PayementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("payementTypes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("activite")
                        .HasColumnType("text");

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("classe")
                        .HasColumnType("text");

                    b.Property<string>("compte")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("datesupport")
                        .HasColumnType("text");

                    b.Property<string>("dateupload")
                        .HasColumnType("text");

                    b.Property<string>("descriptiondir")
                        .HasColumnType("text");

                    b.Property<string>("dirid")
                        .HasColumnType("text");

                    b.Property<string>("dirnom")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("evaluation")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("moisjours")
                        .HasColumnType("text");

                    b.Property<string>("numReception")
                        .HasColumnType("text");

                    b.Property<string>("numcheque")
                        .HasColumnType("text");

                    b.Property<int?>("orgid")
                        .HasColumnType("integer");

                    b.Property<string>("orgnom")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("rapport")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("typeRembourssement")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("orgid");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.RapportProjet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idprojet")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idprojet");

                    b.ToTable("rapportProjets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Conge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adr")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dated")
                        .HasColumnType("text");

                    b.Property<string>("datedebut")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("directeurid")
                        .HasColumnType("text");

                    b.Property<string>("directeurnom")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatd")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idremplacant")
                        .HasColumnType("text");

                    b.Property<string>("nomremplacant")
                        .HasColumnType("text");

                    b.Property<string>("rhid")
                        .HasColumnType("text");

                    b.Property<string>("rhnom")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("conges");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeSalariale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dirid")
                        .HasColumnType("text");

                    b.Property<string>("dirnom")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("organisme")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeSalariales");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dirid")
                        .HasColumnType("text");

                    b.Property<string>("dirnom")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("photosPath")
                        .HasColumnType("text");

                    b.Property<string>("place")
                        .HasColumnType("text");

                    b.Property<string>("regcivil")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Equipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("transfert")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("equipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("nbheure")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesDt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<int>("IdTic")
                        .HasColumnType("integer");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdTic");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("PiecesJointesDts");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesRc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("Idrec")
                        .HasColumnType("integer");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.HasIndex("Idrec");

                    b.ToTable("piecesJointesRcs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PrivelegesRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("dirdate")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("privileges")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("rhdate")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("transafert")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("privelegesRequests");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Recrutement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dated")
                        .HasColumnType("text");

                    b.Property<string>("datedebut")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("dure")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idremplacant")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomremplacant")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("organisme")
                        .HasColumnType("text");

                    b.Property<string>("tache")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("recrutements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.SoldeConge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("annee")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datemaladie")
                        .HasColumnType("text");

                    b.Property<string>("datenormal")
                        .HasColumnType("text");

                    b.Property<string>("dateurgent")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("maladie")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("normal")
                        .HasColumnType("text");

                    b.Property<string>("number")
                        .HasColumnType("text");

                    b.Property<string>("numbermaladie")
                        .HasColumnType("text");

                    b.Property<string>("numbernormal")
                        .HasColumnType("text");

                    b.Property<string>("numberurgent")
                        .HasColumnType("text");

                    b.Property<string>("soldemaladie")
                        .HasColumnType("text");

                    b.Property<string>("soldenormal")
                        .HasColumnType("text");

                    b.Property<string>("soldeurgent")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("urgent")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("soldeConges");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.SoldeCongeEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("annee")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("number")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("soldeCongeEmployees");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.editingUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("editingUsers");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.nomEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("nomEquipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.typeEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeEquipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Salaire.SalaireD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("annee")
                        .HasColumnType("text");

                    b.Property<string>("anneeG")
                        .HasColumnType("text");

                    b.Property<string>("assurance")
                        .HasColumnType("text");

                    b.Property<string>("assuranceG")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autreIndemnite")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("indemnite")
                        .HasColumnType("text");

                    b.Property<string>("indemniteG")
                        .HasColumnType("text");

                    b.Property<string>("leplus")
                        .HasColumnType("text");

                    b.Property<string>("mois")
                        .HasColumnType("text");

                    b.Property<string>("moisG")
                        .HasColumnType("text");

                    b.Property<string>("raisonRetrait")
                        .HasColumnType("text");

                    b.Property<string>("reisonPlus")
                        .HasColumnType("text");

                    b.Property<string>("retrait")
                        .HasColumnType("text");

                    b.Property<string>("retraitG")
                        .HasColumnType("text");

                    b.Property<string>("sailairenet")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("salaireG")
                        .HasColumnType("text");

                    b.Property<string>("tot")
                        .HasColumnType("text");

                    b.Property<string>("totG")
                        .HasColumnType("text");

                    b.Property<string>("totIndemnite")
                        .HasColumnType("text");

                    b.Property<string>("totUser")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUser");

                    b.ToTable("salaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.CreationTravailDemande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("competence")
                        .HasColumnType("text");

                    b.Property<string>("datedebut")
                        .HasColumnType("text");

                    b.Property<string>("datedg")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("diplome")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdg")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddg")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdg")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("selection")
                        .HasColumnType("text");

                    b.Property<string>("tacheTravail")
                        .HasColumnType("text");

                    b.Property<string>("titreposte")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("creationTravailDemandes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DecisionTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("decision")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("org")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("decisionTwos");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DemandeAttestationTravail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("org")
                        .HasColumnType("text");

                    b.Property<string>("userInfo")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeAttestationTravails");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DemandeFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autreSpec")
                        .HasColumnType("text");

                    b.Property<string>("datec")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatc")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<int?>("idFormation")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idc")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("lien")
                        .HasColumnType("text");

                    b.Property<string>("nomc")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("org")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("specialite")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idFormation");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeFormations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DemandeSupHeure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idusername")
                        .HasColumnType("text");

                    b.Property<string>("nbheure")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demandeSupHeures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.FilesOrg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateExpiration")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomfile")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("filesOrgs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.Formation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datedebut")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("org")
                        .HasColumnType("text");

                    b.Property<string>("specialite")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("formations");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("categoriePanne")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datemec")
                        .HasColumnType("text");

                    b.Property<string>("datetrans")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatmec")
                        .HasColumnType("text");

                    b.Property<string>("etattrans")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idmec")
                        .HasColumnType("text");

                    b.Property<string>("nommec")
                        .HasColumnType("text");

                    b.Property<string>("panne")
                        .HasColumnType("text");

                    b.Property<string>("photoPanne")
                        .HasColumnType("text");

                    b.Property<string>("tarnsid")
                        .HasColumnType("text");

                    b.Property<string>("transnom")
                        .HasColumnType("text");

                    b.Property<string>("typePanne")
                        .HasColumnType("text");

                    b.Property<string>("typedemande")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("maintenanceRequests");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.NomFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("nomFiles");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.Panne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("pannes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.ReceptionEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("admin")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterecep")
                        .HasColumnType("text");

                    b.Property<string>("equi")
                        .HasColumnType("text");

                    b.Property<string>("etatEqui")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("quantite")
                        .HasColumnType("text");

                    b.Property<string>("typeEqui")
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("receptionEquipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.Specialite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("specialites");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.SupHeure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("moisPay")
                        .HasColumnType("text");

                    b.Property<string>("nbHeure")
                        .HasColumnType("text");

                    b.Property<string>("numUser")
                        .HasColumnType("text");

                    b.Property<string>("photo")
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.Property<string>("valeur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("supHeures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.SuppEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateEqui")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterecep")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idReception")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomUser")
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idReception");

                    b.HasIndex("userId");

                    b.ToTable("suppEquipements");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.TransfertInterne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("administration")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("bureau")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("employe")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idadmin")
                        .HasColumnType("text");

                    b.Property<string>("idemploye")
                        .HasColumnType("text");

                    b.Property<string>("nomadmin")
                        .HasColumnType("text");

                    b.Property<string>("numtransafert")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("transfertInternes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.newFormationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autreSpec")
                        .HasColumnType("text");

                    b.Property<string>("datec")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("duree")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatc")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idc")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("lien")
                        .HasColumnType("text");

                    b.Property<string>("nomc")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("org")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("specialite")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("newFormationRequests");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Supplies.FilesSupplie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idSupplie")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idSupplie");

                    b.ToTable("filesSupplies");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Supplies.GestionSupplies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("quanitite")
                        .HasColumnType("text");

                    b.Property<string>("reference")
                        .HasColumnType("text");

                    b.Property<string>("sup")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("gestionSupplies");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Supplies.Supplie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("categ")
                        .HasColumnType("text");

                    b.Property<string>("classe")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datereception")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idrecepteur")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("quanitite")
                        .HasColumnType("text");

                    b.Property<string>("recepteur")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("supplies");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Taches.Notiftache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("datenotif")
                        .HasColumnType("text");

                    b.Property<int>("idTache")
                        .HasColumnType("integer");

                    b.Property<string>("idUserAff")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomUserAff")
                        .HasColumnType("text");

                    b.Property<string>("textnotif")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserAff");

                    b.ToTable("notiftaches");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Taches.ProcessTache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("action")
                        .HasColumnType("text");

                    b.Property<string>("affectationtype")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateaction")
                        .HasColumnType("text");

                    b.Property<string>("dateaff")
                        .HasColumnType("text");

                    b.Property<string>("dateusercreator")
                        .HasColumnType("text");

                    b.Property<string>("etataff")
                        .HasColumnType("text");

                    b.Property<string>("etatuserscreator")
                        .HasColumnType("text");

                    b.Property<int>("idtache")
                        .HasColumnType("integer");

                    b.Property<string>("iduseraffected")
                        .HasColumnType("text");

                    b.Property<string>("idusercreator")
                        .HasColumnType("text");

                    b.Property<string>("nomuseraff")
                        .HasColumnType("text");

                    b.Property<string>("nomusercreator")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("processTaches");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ticket.FilesTicket2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idTicket")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTicket");

                    b.ToTable("FilesTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ticket.NotifTicket2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<int>("idTicket")
                        .HasColumnType("integer");

                    b.Property<int>("idadmin")
                        .HasColumnType("integer");

                    b.Property<int>("idetab")
                        .HasColumnType("integer");

                    b.Property<string>("iduser")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTicket");

                    b.ToTable("NotifTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ticket.Ticket2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Attribut1")
                        .HasColumnType("text");

                    b.Property<string>("Attribut2")
                        .HasColumnType("text");

                    b.Property<string>("Attribut3")
                        .HasColumnType("text");

                    b.Property<string>("Attribut5")
                        .HasColumnType("text");

                    b.Property<string>("Attribut6")
                        .HasColumnType("text");

                    b.Property<string>("Attribut7")
                        .HasColumnType("text");

                    b.Property<int>("Attribut8")
                        .HasColumnType("integer");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatadmin")
                        .HasColumnType("text");

                    b.Property<string>("etatetab")
                        .HasColumnType("text");

                    b.Property<string>("etatuser")
                        .HasColumnType("text");

                    b.Property<string>("etatuserdate")
                        .HasColumnType("text");

                    b.Property<string>("etatuserid")
                        .HasColumnType("text");

                    b.Property<string>("etatusernom")
                        .HasColumnType("text");

                    b.Property<int>("idadmin")
                        .HasColumnType("integer");

                    b.Property<int>("idetab")
                        .HasColumnType("integer");

                    b.Property<string>("iduser")
                        .HasColumnType("text");

                    b.Property<string>("nomadmin")
                        .HasColumnType("text");

                    b.Property<string>("nometab")
                        .HasColumnType("text");

                    b.Property<string>("nomuser")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ticket2s");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.FilesUserCin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUser");

                    b.ToTable("filesUserCins");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.FilesUserContrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUser");

                    b.ToTable("filesUserContrats");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.FilesUserPasseport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUser")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUser");

                    b.ToTable("filesUserPasseports");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.Privileges", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Rapport")
                        .HasColumnType("integer");

                    b.Property<int>("addTask")
                        .HasColumnType("integer");

                    b.Property<int>("appel")
                        .HasColumnType("integer");

                    b.Property<int>("commAd")
                        .HasColumnType("integer");

                    b.Property<int>("performance")
                        .HasColumnType("integer");

                    b.Property<int>("salaire")
                        .HasColumnType("integer");

                    b.Property<int>("serviceEmployee")
                        .HasColumnType("integer");

                    b.Property<int>("settings")
                        .HasColumnType("integer");

                    b.Property<string>("userid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("userid");

                    b.ToTable("privileges");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.Demission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demissions");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.FilesPlaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idPlaint")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idPlaint");

                    b.ToTable("filesPlaints");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.PermissionU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autre")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("heuredeb")
                        .HasColumnType("text");

                    b.Property<string>("heurefin")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("permissionUs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.Plaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("affecter")
                        .HasColumnType("text");

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("dateaffecter")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("dateplaint")
                        .HasColumnType("text");

                    b.Property<string>("dateprob")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("decision")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etataffecter")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idaffecter")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomaffecter")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("partieB")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("plaints");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.Residence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("assurance")
                        .HasColumnType("text");

                    b.Property<string>("attibut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("creatorName")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("datenereg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("numBureau")
                        .HasColumnType("text");

                    b.Property<string>("numfrontiere")
                        .HasColumnType("text");

                    b.Property<string>("payer")
                        .HasColumnType("text");

                    b.Property<string>("permistravail")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.Property<string>("renouvler")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("residences");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.CompteBen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("compteBen")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomBanque")
                        .HasColumnType("text");

                    b.Property<string>("nomProp")
                        .HasColumnType("text");

                    b.Property<string>("rib")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idUserCreator");

                    b.ToTable("compteBens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.Famille", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateNais")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nb")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("relation")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("sexe")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idUserCreator");

                    b.ToTable("familles");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.FilesBen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.ToTable("filesBens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adr")
                        .HasColumnType("text");

                    b.Property<string>("dateNais")
                        .HasColumnType("text");

                    b.Property<string>("datechercheur")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatchercheur")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idchercheur")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("natio")
                        .HasColumnType("text");

                    b.Property<string>("nbfamille")
                        .HasColumnType("text");

                    b.Property<string>("nomchercheur")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomprenom")
                        .HasColumnType("text");

                    b.Property<string>("numCin")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("sexe")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("typeCin")
                        .HasColumnType("text");

                    b.Property<string>("typeEnreg")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("gestionBenenficiaires");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.Residance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("typeMaison")
                        .HasColumnType("text");

                    b.Property<string>("typeResi")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idUserCreator");

                    b.ToTable("residances");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.RevenusBen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("prix")
                        .HasColumnType("text");

                    b.Property<string>("typeRev")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idUserCreator");

                    b.ToTable("revenusBens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.TypeBen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeBens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.TypeDroit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeDroits");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.TypeMaison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeMaisons");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.TypeRevBen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeRevBens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.BenPayStockageOrdre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("cin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<int>("idOrdrePayStockage")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idstock")
                        .HasColumnType("integer");

                    b.Property<string>("nomBen")
                        .HasColumnType("text");

                    b.Property<string>("nomStock")
                        .HasColumnType("text");

                    b.Property<string>("quatite")
                        .HasColumnType("text");

                    b.Property<string>("typeBen")
                        .HasColumnType("text");

                    b.Property<string>("typeStock")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idOrdrePayStockage");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idstock");

                    b.ToTable("BenPayStockageOrdres");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.OrdrePayStockage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateDir")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etatBen")
                        .HasColumnType("text");

                    b.Property<string>("etatDir")
                        .HasColumnType("text");

                    b.Property<string>("etatOrdre")
                        .HasColumnType("text");

                    b.Property<int>("idBen")
                        .HasColumnType("integer");

                    b.Property<string>("idDir")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idstock")
                        .HasColumnType("integer");

                    b.Property<string>("nbFamille")
                        .HasColumnType("text");

                    b.Property<string>("nomDir")
                        .HasColumnType("text");

                    b.Property<string>("nomOrdre")
                        .HasColumnType("text");

                    b.Property<string>("nomStock")
                        .HasColumnType("text");

                    b.Property<string>("quantite")
                        .HasColumnType("text");

                    b.Property<string>("respDate")
                        .HasColumnType("text");

                    b.Property<string>("respEtat")
                        .HasColumnType("text");

                    b.Property<string>("respId")
                        .HasColumnType("text");

                    b.Property<string>("respNom")
                        .HasColumnType("text");

                    b.Property<string>("typeBen")
                        .HasColumnType("text");

                    b.Property<string>("typeOrdre")
                        .HasColumnType("text");

                    b.Property<string>("typePay")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idBen");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idstock");

                    b.ToTable("OrdrePayStockages");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.UniteTypeStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UniteTypeStocks");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.FilesVoiture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idVoiture")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idVoiture");

                    b.ToTable("filesVoitures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.NotifCars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("contenue")
                        .HasColumnType("text");

                    b.Property<string>("dateTime")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("notifCars");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.OrganismeVoiture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("organismeVoitures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.TypeVoiture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("typeVoitures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.voiture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefinassurance")
                        .HasColumnType("text");

                    b.Property<string>("datefinforme")
                        .HasColumnType("text");

                    b.Property<string>("genre")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idrecepteur")
                        .HasColumnType("text");

                    b.Property<string>("marque")
                        .HasColumnType("text");

                    b.Property<string>("matricule")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("recepeteur")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("voitures");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.voitureRepair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datedir")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterepair")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdir")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddir")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<int?>("idvoiture")
                        .HasColumnType("integer");

                    b.Property<string>("matricule")
                        .HasColumnType("text");

                    b.Property<string>("nomdir")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("panne")
                        .HasColumnType("text");

                    b.Property<string>("prix1")
                        .HasColumnType("text");

                    b.Property<string>("prix2")
                        .HasColumnType("text");

                    b.Property<string>("prix3")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("idvoiture");

                    b.ToTable("voitureRepairs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("FullNameEnglish")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autreIndemnite")
                        .HasColumnType("text");

                    b.Property<string>("classement")
                        .HasColumnType("text");

                    b.Property<string>("dateNaissance")
                        .HasColumnType("text");

                    b.Property<string>("dateQualification")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterectrutement")
                        .HasColumnType("text");

                    b.Property<string>("degre")
                        .HasColumnType("text");

                    b.Property<string>("directeur")
                        .HasColumnType("text");

                    b.Property<string>("emploi")
                        .HasColumnType("text");

                    b.Property<string>("etatuser")
                        .HasColumnType("text");

                    b.Property<string>("faculteEcole")
                        .HasColumnType("text");

                    b.Property<string>("heureArrive")
                        .HasColumnType("text");

                    b.Property<string>("heureDepart")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int?>("idDepartement")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("indemnite")
                        .HasColumnType("text");

                    b.Property<string>("lieuNaissance")
                        .HasColumnType("text");

                    b.Property<string>("mention")
                        .HasColumnType("text");

                    b.Property<string>("nationalite")
                        .HasColumnType("text");

                    b.Property<string>("nomAdministration")
                        .HasColumnType("text");

                    b.Property<string>("nomDepartement")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("passeport")
                        .HasColumnType("text");

                    b.Property<string>("paysetude")
                        .HasColumnType("text");

                    b.Property<string>("photo")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<string>("qualification")
                        .HasColumnType("text");

                    b.Property<string>("rang")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("religion")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("sexe")
                        .HasColumnType("text");

                    b.Property<string>("soldeconge")
                        .HasColumnType("text");

                    b.Property<string>("specialite")
                        .HasColumnType("text");

                    b.Property<string>("statut")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("typeEmploi")
                        .HasColumnType("text");

                    b.Property<string>("typeQualification")
                        .HasColumnType("text");

                    b.Property<string>("typeSang")
                        .HasColumnType("text");

                    b.Property<string>("unite")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasIndex("idAdministration");

                    b.HasIndex("idDepartement");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.LiaisonE", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idTrOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.PiecesJointeE", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.ReceptionE", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TeAffectation", "TeAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TeAffectation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("AdministrationId");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", "TransactionEmise")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Emise.TransactionEmise", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrg");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("idProp");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.LiaisonI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idTrOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.PiecesJointesI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.ReceptionI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TiAffectation", "TiAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TiAffectation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("idAdministration");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", "TransactionI")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Interne.TransactionI", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrg");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("idProp");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Liaison", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idTrOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesAffected", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", "TrAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectedTr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.PiecesJointesTr", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idtransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Receptioncs", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", "TrAffectation")
                        .WithMany()
                        .HasForeignKey("idAffectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.TrAffectation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrganisme");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("idTransaction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.Transaction", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("idOrg");

                    b.HasOne("WebApplicationPlateforme.Model.AdministrativeCommunication.Proprietaire", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("idProp");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.Doneur", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.PayemeentReception", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dons.Doneur", "Doneur")
                        .WithMany()
                        .HasForeignKey("idDonneur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dons.RecueDons", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.LesServices", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.revenus", "revenus")
                        .WithMany()
                        .HasForeignKey("idRevenus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.PiecesJointesDotLoc", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locataireDot", "locataireDot")
                        .WithMany()
                        .HasForeignKey("idlocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.contratLocation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locationUnite", "locationUnite")
                        .WithMany()
                        .HasForeignKey("locationUniteId");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.dotation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.agenceImmob", "AgenceImmob")
                        .WithMany()
                        .HasForeignKey("AgenceImmobId");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locataire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locataireDot", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.dotation", "dotation")
                        .WithMany()
                        .HasForeignKey("idDotation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.unite", "unite")
                        .WithMany()
                        .HasForeignKey("idUnite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.locationUnite", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.dotation", "dotation")
                        .WithMany()
                        .HasForeignKey("iddotation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locataire", "locataire")
                        .WithMany()
                        .HasForeignKey("idlocataire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.Dotations.unite", "unite")
                        .WithMany()
                        .HasForeignKey("idunite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesLocataire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locataire", "locataire")
                        .WithMany()
                        .HasForeignKey("idlocataire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.piecesjointesRevenus", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.revenus", "revenus")
                        .WithMany()
                        .HasForeignKey("idrevenus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.revenus", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.locataireDot", "locataireDot")
                        .WithMany()
                        .HasForeignKey("idLocDot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Dotations.unite", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Dotations.dotation", "dotation")
                        .WithMany()
                        .HasForeignKey("idDotation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenement2.EvenementTwo", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenement2.PiecesJointesEvTzo", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenement2.EvenementTwo", "EvenementTwo")
                        .WithMany()
                        .HasForeignKey("idEv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.BeneficiaireEvent", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.DepensesEv", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.EntrerDansIslam", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Evenement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.MediasEv", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.OutilsEvent", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.Participation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Evenements.PiecesJointesEvents", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Evenements.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("idEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.BrancheOne", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Finance.TypeFacture", "TypeFacture")
                        .WithMany()
                        .HasForeignKey("idTF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.BrancheTwo", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Finance.BrancheOne", "BrancheOne")
                        .WithMany()
                        .HasForeignKey("idBOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.ChequeReception", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.CreanceFinanciere", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.DemandeAvance", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.DepensesExploitation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.Facture", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.PiecesJointesCf", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Finance.CreanceFinanciere", "CreanceFinanciere")
                        .WithMany()
                        .HasForeignKey("idCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.PiecesJointesReceptionC", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Finance.ChequeReception", "ChequeReception")
                        .WithMany()
                        .HasForeignKey("idRC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Finance.PiecesJointesf", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Finance.Facture", "Facture")
                        .WithMany()
                        .HasForeignKey("idCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ActionOnDemPayCheq", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemandePayCheque", "DemandePayCheque")
                        .WithMany()
                        .HasForeignKey("idDem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ArticlePayCheque", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemandePayCheque", "DemandePayCheque")
                        .WithMany()
                        .HasForeignKey("idDem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ChequeC", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemPayCheqNotif", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemandePayCheque", "DemandePayCheque")
                        .WithMany()
                        .HasForeignKey("idDem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemandePayCheque", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.FilesCheque", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ChequeC", "ChequeC")
                        .WithMany()
                        .HasForeignKey("idCheque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.FilesPayCheque", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.DemandePayCheque", "DemandePayCheque")
                        .WithMany()
                        .HasForeignKey("idDemCheque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.PayCheque", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Cheques.ChequeC", "ChequeC")
                        .WithMany()
                        .HasForeignKey("idCheque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.EtatCompte", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Projets.Compte", "Compte")
                        .WithMany()
                        .HasForeignKey("idCompte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.FilesEtatCompte", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.EtatCompte", "EtatCompte")
                        .WithMany()
                        .HasForeignKey("idCompte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.FinancePartTwo.Comptes.ServiceBanque", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Projets.Compte", "Compte")
                        .WithMany()
                        .HasForeignKey("idCompte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.PayDirecteStockage", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.Stockage", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("stockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.TypeStock", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.TypeStockage", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_de_stock.OrdrePayStockage", "OrdrePayStockage")
                        .WithMany()
                        .HasForeignKey("idOrdrePayStockage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stockage", "Stockage")
                        .WithMany()
                        .HasForeignKey("idstockage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Departement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("IdAdministration")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Maintenance.FilesTickets", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Maintenance.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("idTic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Media_Center.InterviewPart.Interview", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Msg_Interne.FilesMsgInterne", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Msg_Interne.MsgInterne", "MsgInterne")
                        .WithMany()
                        .HasForeignKey("idMsg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Msg_Interne.NotifMsgInterne", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Msg_Interne.MsgInterne", "MsgInterne")
                        .WithMany()
                        .HasForeignKey("idMsg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.News.Newsi", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.OrgPart.OrgParti", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.DotationOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.EducationOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.FilesOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.FinanceOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.MatieresOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.MereOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.Orphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.PereOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.PsyOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.SanteOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.SubventionOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.TalentOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Orphelin.TuteurOrphelin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Orphelin.Orphelin", "Orphelin")
                        .WithMany()
                        .HasForeignKey("idOrph")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Parrainage.Parriner", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idTut")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Parrainage.SoldeTuteur", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Parrainage.TuteurParrainage", "TuteurParrainage")
                        .WithMany()
                        .HasForeignKey("idTut")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Parrainage.TuteurParrainage", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Pointage.PointageUser", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.FilesProjetOrg", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.ProjetOrg.ProjetOrg", "ProjetOrg")
                        .WithMany()
                        .HasForeignKey("idprojet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.ProjetOrg", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.ProjetOrg.ProjetClient", "ProjetClient")
                        .WithMany()
                        .HasForeignKey("idClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ProjetOrg.ProjetOuvrier", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.ProjetOrg.ProjetOrg", "ProjetOrg")
                        .WithMany()
                        .HasForeignKey("idprojet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.ButProjet", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Projets.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("idprojet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.FilesProjet", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Projets.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("idprojet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.PayementProjet", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Projets.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("idprojet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.Projet", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Projets.OrganismeSupp", "OrganismeSupp")
                        .WithMany()
                        .HasForeignKey("orgid");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Projets.RapportProjet", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Projets.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("idprojet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Conge", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeSalariale", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeTicket", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Equipement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Permission", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesDt", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Ressource_Humaines.DemandeTicket", "DemandeTicket")
                        .WithMany()
                        .HasForeignKey("IdTic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PiecesJointesRc", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Ressource_Humaines.Recrutement", "Recrutement")
                        .WithMany()
                        .HasForeignKey("Idrec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.PrivelegesRequests", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.Recrutement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.SoldeConge", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.SoldeCongeEmployee", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.editingUser", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Salaire.SalaireD", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.CreationTravailDemande", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DecisionTwo", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DemandeAttestationTravail", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DemandeFormation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.ServiceRh.Formation", "Formation")
                        .WithMany()
                        .HasForeignKey("idFormation");

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.DemandeSupHeure", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.FilesOrg", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.Formation", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.MaintenanceRequest", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.ReceptionEquipement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.SupHeure", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.SuppEquipement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.ServiceRh.ReceptionEquipement", "ReceptionEquipement")
                        .WithMany()
                        .HasForeignKey("idReception")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.TransfertInterne", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ServiceRh.newFormationRequest", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Supplies.FilesSupplie", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Supplies.Supplie", "Supplie")
                        .WithMany()
                        .HasForeignKey("idSupplie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Supplies.Supplie", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Taches.Notiftache", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserAff");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ticket.FilesTicket2", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Ticket.Ticket2", "Ticket2")
                        .WithMany()
                        .HasForeignKey("idTicket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ticket.NotifTicket2", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Ticket.Ticket2", "Ticket2")
                        .WithMany()
                        .HasForeignKey("idTicket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.FilesUserCin", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.FilesUserContrat", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.FilesUserPasseport", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUser");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.Privileges", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.Demission", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.FilesPlaint", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User_Services.Plaint", "Plaint")
                        .WithMany()
                        .HasForeignKey("idPlaint")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.PermissionU", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.Plaint", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User_Services.Residence", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.CompteBen", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.Famille", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.FilesBen", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.Residance", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_beneficiaire.RevenusBen", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.BenPayStockageOrdre", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.gestion_de_stock.OrdrePayStockage", "OrdrePayStockage")
                        .WithMany()
                        .HasForeignKey("idOrdrePayStockage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.OrdrePayStockage", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.gestion_beneficiaire.GestionBenenficiaire", "GestionBenenficiaire")
                        .WithMany()
                        .HasForeignKey("idBen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.FilesVoiture", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.voitures.voiture", "voiture")
                        .WithMany()
                        .HasForeignKey("idVoiture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.NotifCars", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.voiture", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.voitures.voitureRepair", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.voitures.voiture", "voiture")
                        .WithMany()
                        .HasForeignKey("idvoiture");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.ApplicationUser", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("idAdministration");

                    b.HasOne("WebApplicationPlateforme.Model.Global.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("idDepartement");
                });
#pragma warning restore 612, 618
        }
    }
}
