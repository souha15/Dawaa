// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplicationPlateforme.Data;

namespace WebApplicationPlateforme.Migrations.Dawaa
{
    [DbContext(typeof(DawaaContext))]
    [Migration("20211214102846_MigrationsWomenActivite")]
    partial class MigrationsWomenActivite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ActivitePart.Activitee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("attribut7")
                        .HasColumnType("text");

                    b.Property<string>("dateDeb")
                        .HasColumnType("text");

                    b.Property<string>("dateEnreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nbActivite")
                        .HasColumnType("text");

                    b.Property<string>("nbBenef")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("Activitee");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ActivitePart.ActiviteeWomen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("attribut7")
                        .HasColumnType("text");

                    b.Property<string>("dateDeb")
                        .HasColumnType("text");

                    b.Property<string>("dateEnreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nbActivite")
                        .HasColumnType("text");

                    b.Property<string>("nbBenef")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("ActiviteeWomens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ActivitePart.TypeActivitee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeActivitee");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ActivitePart.TypeActiviteeForWomen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeActiviteeForWomens");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.AdministrativeCommunication.TypeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeTransaction");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ChangerRib.DemChangeRib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterh")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatrh")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("idrh")
                        .HasColumnType("text");

                    b.Property<string>("nomBanque")
                        .HasColumnType("text");

                    b.Property<string>("nomrh")
                        .HasColumnType("text");

                    b.Property<string>("rib")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("DemChangeRib");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ChangerRib.FilesDemChangeRib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idDem")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idDem");

                    b.ToTable("FilesDemChangeRib");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ConfigSystemShowing.ConfigSystemFront", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("footerIcon")
                        .HasColumnType("text");

                    b.Property<string>("footerText")
                        .HasColumnType("text");

                    b.Property<string>("homeBackground")
                        .HasColumnType("text");

                    b.Property<string>("icon1")
                        .HasColumnType("text");

                    b.Property<string>("icon10")
                        .HasColumnType("text");

                    b.Property<string>("icon2")
                        .HasColumnType("text");

                    b.Property<string>("icon3")
                        .HasColumnType("text");

                    b.Property<string>("icon4")
                        .HasColumnType("text");

                    b.Property<string>("icon5")
                        .HasColumnType("text");

                    b.Property<string>("icon6")
                        .HasColumnType("text");

                    b.Property<string>("icon7")
                        .HasColumnType("text");

                    b.Property<string>("icon8")
                        .HasColumnType("text");

                    b.Property<string>("icon9")
                        .HasColumnType("text");

                    b.Property<string>("loginBackground")
                        .HasColumnType("text");

                    b.Property<string>("loginIcon")
                        .HasColumnType("text");

                    b.Property<string>("loginText")
                        .HasColumnType("text");

                    b.Property<string>("navIcon")
                        .HasColumnType("text");

                    b.Property<string>("reportLeftIcon")
                        .HasColumnType("text");

                    b.Property<string>("reportRightIcon")
                        .HasColumnType("text");

                    b.Property<string>("reportSignature")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfigSystemFront");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Decision.DecisionDecisif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("UserNameCreator")
                        .HasColumnType("text");

                    b.Property<string>("anneeDecHij")
                        .HasColumnType("text");

                    b.Property<string>("anneeDecMil")
                        .HasColumnType("text");

                    b.Property<string>("anneeHij")
                        .HasColumnType("text");

                    b.Property<string>("anneeMil")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("dateHijMil")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datehijmil")
                        .HasColumnType("text");

                    b.Property<string>("decisionNb")
                        .HasColumnType("text");

                    b.Property<string>("infraction")
                        .HasColumnType("text");

                    b.Property<string>("joursHij")
                        .HasColumnType("text");

                    b.Property<string>("joursMil")
                        .HasColumnType("text");

                    b.Property<string>("moisDecHij")
                        .HasColumnType("text");

                    b.Property<string>("moisDecMil")
                        .HasColumnType("text");

                    b.Property<string>("moisHij")
                        .HasColumnType("text");

                    b.Property<string>("moisMil")
                        .HasColumnType("text");

                    b.Property<string>("periode")
                        .HasColumnType("text");

                    b.Property<string>("repetion")
                        .HasColumnType("text");

                    b.Property<string>("typeDec")
                        .HasColumnType("text");

                    b.Property<int>("typeDecstr")
                        .HasColumnType("integer");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("DecisionDecisifs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Decision.DecissionCommun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IdUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("UserNameCreator")
                        .HasColumnType("text");

                    b.Property<int>("adminId")
                        .HasColumnType("integer");

                    b.Property<string>("adminName")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autre")
                        .HasColumnType("text");

                    b.Property<string>("dateFinContratHij")
                        .HasColumnType("text");

                    b.Property<string>("dateFinContratMil")
                        .HasColumnType("text");

                    b.Property<string>("dateTravail")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("emploi")
                        .HasColumnType("text");

                    b.Property<int>("etabId")
                        .HasColumnType("integer");

                    b.Property<string>("etabName")
                        .HasColumnType("text");

                    b.Property<string>("infraction")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<string>("raison")
                        .HasColumnType("text");

                    b.Property<int>("typeDecint")
                        .HasColumnType("integer");

                    b.Property<string>("typeDecstr")
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("DecissionCommuns");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.CommentsTicketFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<int>("idComment")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idComment");

                    b.ToTable("CommentsTicketFiles");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.CommentsTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("attribut7")
                        .HasColumnType("text");

                    b.Property<string>("attribut8")
                        .HasColumnType("text");

                    b.Property<string>("dateTime")
                        .HasColumnType("text");

                    b.Property<int>("idTicket")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTicket");

                    b.ToTable("CommentsTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.FilesGestionTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idTicket")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idTicket");

                    b.ToTable("FilesGestionTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.GestionTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("agentId")
                        .HasColumnType("text");

                    b.Property<string>("agentName")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("attribut7")
                        .HasColumnType("text");

                    b.Property<string>("attribut8")
                        .HasColumnType("text");

                    b.Property<string>("clientDate")
                        .HasColumnType("text");

                    b.Property<string>("clientId")
                        .HasColumnType("text");

                    b.Property<string>("clientName")
                        .HasColumnType("text");

                    b.Property<string>("dateAgent")
                        .HasColumnType("text");

                    b.Property<string>("dateDeb")
                        .HasColumnType("text");

                    b.Property<string>("dateEtat")
                        .HasColumnType("text");

                    b.Property<string>("dateFin")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("descriptionAgent")
                        .HasColumnType("text");

                    b.Property<string>("detailAgent")
                        .HasColumnType("text");

                    b.Property<string>("details")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<int>("numTicket")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("priorite")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("remarqueAgent")
                        .HasColumnType("text");

                    b.Property<string>("titre")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GestionTickets");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("attribut7")
                        .HasColumnType("integer");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.Property<string>("respId")
                        .HasColumnType("text");

                    b.Property<string>("respNom")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Administration", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NomDirecteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Administration");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Departement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("IdAdministration")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("NomAdministration")
                        .HasColumnType("text");

                    b.Property<string>("NomDirecteur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministration");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MediaCenter.PartageMedia.PartageMediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PartageMediaType");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MediaCenter.Visite.offreImpression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idvisite")
                        .HasColumnType("integer");

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idvisite");

                    b.ToTable("offreImpression");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MediaCenter.Visite.visite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("admidate")
                        .HasColumnType("text");

                    b.Property<string>("admietat")
                        .HasColumnType("text");

                    b.Property<string>("adminid")
                        .HasColumnType("text");

                    b.Property<string>("adminom")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("budget")
                        .HasColumnType("text");

                    b.Property<string>("but")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("detail")
                        .HasColumnType("text");

                    b.Property<string>("dirdate")
                        .HasColumnType("text");

                    b.Property<string>("diretat")
                        .HasColumnType("text");

                    b.Property<string>("dirid")
                        .HasColumnType("text");

                    b.Property<string>("dirnom")
                        .HasColumnType("text");

                    b.Property<string>("etabdate")
                        .HasColumnType("text");

                    b.Property<string>("etabetat")
                        .HasColumnType("text");

                    b.Property<string>("etabid")
                        .HasColumnType("text");

                    b.Property<string>("etabnom")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nb")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("visite");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MusulumanFemme.filesmusulmanWoman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idmusulman")
                        .HasColumnType("integer");

                    b.Property<string>("paths")
                        .HasColumnType("text");

                    b.Property<string>("typefile")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idmusulman");

                    b.ToTable("filesmusulmanWoman");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MusulumanFemme.musulmanWoman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("adr")
                        .HasColumnType("text");

                    b.Property<int?>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("cadeauxtest")
                        .HasColumnType("text");

                    b.Property<string>("change")
                        .HasColumnType("text");

                    b.Property<string>("chatdep")
                        .HasColumnType("text");

                    b.Property<string>("circonsion")
                        .HasColumnType("text");

                    b.Property<string>("cite")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datehij")
                        .HasColumnType("text");

                    b.Property<string>("datemil")
                        .HasColumnType("text");

                    b.Property<string>("datenais")
                        .HasColumnType("text");

                    b.Property<string>("datepass")
                        .HasColumnType("text");

                    b.Property<string>("dateresidence")
                        .HasColumnType("text");

                    b.Property<string>("depart")
                        .HasColumnType("text");

                    b.Property<string>("engnom")
                        .HasColumnType("text");

                    b.Property<string>("files")
                        .HasColumnType("text");

                    b.Property<string>("garantnom")
                        .HasColumnType("text");

                    b.Property<string>("garanttype")
                        .HasColumnType("text");

                    b.Property<string>("haj")
                        .HasColumnType("text");

                    b.Property<string>("idusercreator")
                        .HasColumnType("text");

                    b.Property<string>("jours")
                        .HasColumnType("text");

                    b.Property<string>("langue")
                        .HasColumnType("text");

                    b.Property<string>("nat")
                        .HasColumnType("text");

                    b.Property<string>("numdos")
                        .HasColumnType("text");

                    b.Property<string>("numpass")
                        .HasColumnType("text");

                    b.Property<string>("nvnom")
                        .HasColumnType("text");

                    b.Property<string>("omra")
                        .HasColumnType("text");

                    b.Property<string>("predicateur")
                        .HasColumnType("text");

                    b.Property<string>("prevnom")
                        .HasColumnType("text");

                    b.Property<string>("pub")
                        .HasColumnType("text");

                    b.Property<string>("recep")
                        .HasColumnType("text");

                    b.Property<string>("registre")
                        .HasColumnType("text");

                    b.Property<string>("religion")
                        .HasColumnType("text");

                    b.Property<string>("req")
                        .HasColumnType("text");

                    b.Property<string>("residence")
                        .HasColumnType("text");

                    b.Property<string>("scene")
                        .HasColumnType("text");

                    b.Property<string>("soiree")
                        .HasColumnType("text");

                    b.Property<string>("sourcepass")
                        .HasColumnType("text");

                    b.Property<string>("sourceres")
                        .HasColumnType("text");

                    b.Property<string>("telgarant")
                        .HasColumnType("text");

                    b.Property<string>("telmus")
                        .HasColumnType("text");

                    b.Property<string>("test")
                        .HasColumnType("text");

                    b.Property<string>("travail")
                        .HasColumnType("text");

                    b.Property<string>("urlsm")
                        .HasColumnType("text");

                    b.Property<string>("usernamecreator")
                        .HasColumnType("text");

                    b.Property<string>("walking")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idusercreator");

                    b.ToTable("musulmanWoman");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.NotificationSettings.NotifText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotifTexts");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Pointage.AddresseMac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("adminId")
                        .HasColumnType("integer");

                    b.Property<string>("adminName")
                        .HasColumnType("text");

                    b.Property<string>("adresseMac")
                        .HasColumnType("text");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("date")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<int>("etabId")
                        .HasColumnType("integer");

                    b.Property<string>("etabName")
                        .HasColumnType("text");

                    b.Property<string>("pcInfos")
                        .HasColumnType("text");

                    b.Property<string>("userId")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("AddresseMacs");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Ressource_Humaines.TypeRecrutement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeRecrutement");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.TechnicalDemands.DemTech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdate")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<int>("idadmin")
                        .HasColumnType("integer");

                    b.Property<string>("marque")
                        .HasColumnType("text");

                    b.Property<string>("modele")
                        .HasColumnType("text");

                    b.Property<string>("nomadmin")
                        .HasColumnType("text");

                    b.Property<string>("nomprog")
                        .HasColumnType("text");

                    b.Property<string>("numorg")
                        .HasColumnType("text");

                    b.Property<string>("numsalle")
                        .HasColumnType("text");

                    b.Property<string>("numvideo")
                        .HasColumnType("text");

                    b.Property<string>("techid")
                        .HasColumnType("text");

                    b.Property<string>("technnom")
                        .HasColumnType("text");

                    b.Property<string>("typedem")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("demTeches");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.TechnicalDemands.TypeTechDem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeTechDems");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.VenteServices.OffreVente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("idVente")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idVente");

                    b.ToTable("OffreVentes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.VenteServices.ServiceVente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("admin")
                        .HasColumnType("text");

                    b.Property<int>("adminId")
                        .HasColumnType("integer");

                    b.Property<int>("attribut1")
                        .HasColumnType("integer");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("datedot")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("datefin")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("etatdot")
                        .HasColumnType("text");

                    b.Property<string>("etatfin")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("iddot")
                        .HasColumnType("text");

                    b.Property<string>("idfin")
                        .HasColumnType("text");

                    b.Property<string>("nomdot")
                        .HasColumnType("text");

                    b.Property<string>("nomfin")
                        .HasColumnType("text");

                    b.Property<string>("remarque")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.ToTable("ServiceVentes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.VenteServices.TypeServiceVente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeServiceVentes");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.RetourStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<int>("benId")
                        .HasColumnType("integer");

                    b.Property<string>("bennom")
                        .HasColumnType("text");

                    b.Property<string>("categorie")
                        .HasColumnType("text");

                    b.Property<string>("dateRetour")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasColumnType("text");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("nomstock")
                        .HasColumnType("text");

                    b.Property<string>("quatite")
                        .HasColumnType("text");

                    b.Property<string>("respId")
                        .HasColumnType("text");

                    b.Property<string>("respnom")
                        .HasColumnType("text");

                    b.Property<int>("stockId")
                        .HasColumnType("integer");

                    b.Property<string>("typestock")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idUserCreator");

                    b.HasIndex("stockId");

                    b.ToTable("RetourStock");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("FullNameEnglish")
                        .HasColumnType("text");

                    b.Property<string>("adresse")
                        .HasColumnType("text");

                    b.Property<string>("attribut1")
                        .HasColumnType("text");

                    b.Property<string>("attribut2")
                        .HasColumnType("text");

                    b.Property<string>("attribut3")
                        .HasColumnType("text");

                    b.Property<string>("attribut4")
                        .HasColumnType("text");

                    b.Property<string>("attribut5")
                        .HasColumnType("text");

                    b.Property<string>("attribut6")
                        .HasColumnType("text");

                    b.Property<string>("autreIndemnite")
                        .HasColumnType("text");

                    b.Property<string>("classement")
                        .HasColumnType("text");

                    b.Property<string>("dateNaissance")
                        .HasColumnType("text");

                    b.Property<string>("dateQualification")
                        .HasColumnType("text");

                    b.Property<string>("dateenreg")
                        .HasColumnType("text");

                    b.Property<string>("daterectrutement")
                        .HasColumnType("text");

                    b.Property<string>("degre")
                        .HasColumnType("text");

                    b.Property<string>("directeur")
                        .HasColumnType("text");

                    b.Property<string>("emploi")
                        .HasColumnType("text");

                    b.Property<string>("etatuser")
                        .HasColumnType("text");

                    b.Property<string>("faculteEcole")
                        .HasColumnType("text");

                    b.Property<string>("heureArrive")
                        .HasColumnType("text");

                    b.Property<string>("heureDepart")
                        .HasColumnType("text");

                    b.Property<int?>("idAdministration")
                        .HasColumnType("integer");

                    b.Property<int?>("idDepartement")
                        .HasColumnType("integer");

                    b.Property<string>("idUserCreator")
                        .HasColumnType("text");

                    b.Property<string>("indemnite")
                        .HasColumnType("text");

                    b.Property<string>("lieuNaissance")
                        .HasColumnType("text");

                    b.Property<string>("mention")
                        .HasColumnType("text");

                    b.Property<string>("nationalite")
                        .HasColumnType("text");

                    b.Property<string>("nomAdministration")
                        .HasColumnType("text");

                    b.Property<string>("nomDepartement")
                        .HasColumnType("text");

                    b.Property<string>("num")
                        .HasColumnType("text");

                    b.Property<string>("passeport")
                        .HasColumnType("text");

                    b.Property<string>("paysetude")
                        .HasColumnType("text");

                    b.Property<string>("photo")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<string>("qualification")
                        .HasColumnType("text");

                    b.Property<string>("rang")
                        .HasColumnType("text");

                    b.Property<string>("registreCivil")
                        .HasColumnType("text");

                    b.Property<string>("religion")
                        .HasColumnType("text");

                    b.Property<string>("salaire")
                        .HasColumnType("text");

                    b.Property<string>("sexe")
                        .HasColumnType("text");

                    b.Property<string>("soldeconge")
                        .HasColumnType("text");

                    b.Property<string>("specialite")
                        .HasColumnType("text");

                    b.Property<string>("statut")
                        .HasColumnType("text");

                    b.Property<string>("tel")
                        .HasColumnType("text");

                    b.Property<string>("typeEmploi")
                        .HasColumnType("text");

                    b.Property<string>("typeQualification")
                        .HasColumnType("text");

                    b.Property<string>("typeSang")
                        .HasColumnType("text");

                    b.Property<string>("unite")
                        .HasColumnType("text");

                    b.Property<string>("userNameCreator")
                        .HasColumnType("text");

                    b.HasIndex("idAdministration");

                    b.HasIndex("idDepartement");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ActivitePart.Activitee", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ActivitePart.ActiviteeWomen", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ChangerRib.DemChangeRib", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.ChangerRib.FilesDemChangeRib", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.ChangerRib.DemChangeRib", "DemChangeRib")
                        .WithMany()
                        .HasForeignKey("idDem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Decision.DecisionDecisif", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Decision.DecissionCommun", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.CommentsTicketFiles", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.GestionDestTickets.CommentsTickets", "CommentsTickets")
                        .WithMany()
                        .HasForeignKey("idComment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.CommentsTickets", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.GestionDestTickets.GestionTickets", "GestionTickets")
                        .WithMany()
                        .HasForeignKey("idTicket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.GestionDestTickets.FilesGestionTickets", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.GestionDestTickets.GestionTickets", "GestionTickets")
                        .WithMany()
                        .HasForeignKey("idTicket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Global.Departement", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("IdAdministration")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MediaCenter.Visite.offreImpression", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.MediaCenter.Visite.visite", "visite")
                        .WithMany()
                        .HasForeignKey("idvisite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MediaCenter.Visite.visite", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MusulumanFemme.filesmusulmanWoman", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.MusulumanFemme.musulmanWoman", "musulman")
                        .WithMany()
                        .HasForeignKey("idmusulman")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.MusulumanFemme.musulmanWoman", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idusercreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.Pointage.AddresseMac", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.TechnicalDemands.DemTech", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.VenteServices.OffreVente", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.VenteServices.ServiceVente", "ServiceVente")
                        .WithMany()
                        .HasForeignKey("idVente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.VenteServices.ServiceVente", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.gestion_de_stock.RetourStock", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.User.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("idUserCreator");

                    b.HasOne("WebApplicationPlateforme.Model.Gestion_de_stock.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("stockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplicationPlateforme.Model.User.ApplicationUser", b =>
                {
                    b.HasOne("WebApplicationPlateforme.Model.Global.Administration", "Administration")
                        .WithMany()
                        .HasForeignKey("idAdministration");

                    b.HasOne("WebApplicationPlateforme.Model.Global.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("idDepartement");
                });
#pragma warning restore 612, 618
        }
    }
}
